demo()
contributors()
license()
getwp()
getwd()
getwd()
setwd("C:/Users/mauri/OneDrive/Desktop/MEUS ESTUDOS/FORMACAO CIENTISTA DE DADOS - BIG DATA ANALYTICS/01 - Linguagem R")
getwd()
getwd()
save.image("C:/Users/mauri/OneDrive/Desktop/MEUS ESTUDOS/FORMACAO CIENTISTA DE DADOS - BIG DATA ANALYTICS/01 - Linguagem R/WorkspaceLinguagemR.RData")
# Print
print('Hello world');
# Print
print('Hello world');
# Print
print('Hello world');
# Print
print('Hello world');
# Plot Graphcs
plot(1:20)
# Plot Graphcs
plot(2:20)
# Plot Graphcs
plot(10:20)
# Plot Graphcs
plot(10:100)
hist(rnorm(10))
hist(rnorm(20))
# packages Install
install.packages("ggplot2");
# load package
library(ggplot2);
# detach package
detach(package:ggplot2)
# help
help(mean)
#or
?mean
# help
help("plot")
#or
?library
# help - if you dont know the function name
help.search("randomForest")
??matplot
#sum
1+1
10/2
100%%2
100%%3
2^8
2**4
n1 = 9
n2 = 12
n1 > 5
n1 < 10
# Logical Operators
(TRUE) && !(TRUE)
# Logical Operators
(TRUE) && !(FALSE)
# Logical Operators
(TRUE) & !(FALSE)
(TRUE) | (FALSE)
n = 2.5
n2 = 4
n2
class(n)
class(n2)
is.integer(n2) #
n3 = as.integer(n2) # Convert n2 to integer
class(n3)
n4 = 3.14
n5 = as.integer(n4)
n5
class(n5)
n4 = 10.565623
n5 = as.integer(n4)
n5
c1 = 'a'
c2 = 'b'
c1 = 'a'
c2 = 'hello world'
complexNumber01 = 2.5 + 4i
complexNumber01 = 5 + 10i
complexNumber01
class(complexNumber)
class(complexNumber01)
sqrt(9)
sqrt(-1+0i)
sqrt(as.complex(-1))
# VARS
var1 = 365
mode(var1)
# VARS
var1 = 10
mode(var1) # storage type
typeof(var1)
typeof(var1) # double
var2 = c("hello", "world")
var2
mode(var2)
typeof(var2)
var3 = function(x) { x * 10}
var3
var3(3)
mode(var3)
# object attributions
x <- c(1, 2, 3, 4, 5)
x
mode(x)
c(1, 2, 3, 4) -> x2
x2
assign("x3", c(2, 4, 6, 8))
x3
x[2]
x[1]
length(x)
ls(x)
ls()
# remove objects
rm(x)
# vector
v1 <- c(1,2,3,4)
length(v1)
# matriz
m1 <- matrix(1:10, nrow = 5)
View(m1)
length(m1)
mode(m1)
typeof(m1)
class(m1)
m1
# array - N Dimensions
array1 <- array(1:5, dim = c(3,3,3))
array1
mode(array1)
class(array1)
typeof(array1)
length(array1)
# dataframes
View(iris)
lenght(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
l1 <- list(a=m1, b=v1)
length(l1)
class(l1)
typeof(iris)
typeof(l1)
typeof(iris)
f1 <- function(x) {
var1 <- x*x
return(var1)
}
f1(10)
class(f1)
matrix(c(1,2,3,4,5), nr=2)
matrix(c(1,2,3,4), nr=2)
matrix(c(1,2,3,4,5,6), nr=2)
matrix(c(1,2,3,4,5,6), nr=3)
matrix(c(1,2,3,4,5,6), nr=6)
data = c(1:10)
matrix(data = myData, nrow = 5, ncol = 2, byrow = T)
myData = c(1:10)
matrix(data = myData, nrow = 5, ncol = 2, byrow = T)
matrix(data = myData, nrow = 5, ncol = 2, byrow = F)
T
matrix(data = myData, nrow = 5, ncol = 2)
m2 = 1:3
diag(m2)
m2 = 1:3
class(m2)
v1 = 1:3
class(v1)
m2 = diag(v1)
m2
vector = diag(m2)
v2 = diag(m2)
v2
# transposta or Pivot
W <- matrix(c(2,4,8,12), nr=2, ncol=2)
W
t(W)
# Inversa
solve(W)
# Nomeando a Matriz
mat3 <- matrix(c('FUtebol', 'Natação', 'Campo', 'Piscina'), nr=2)
mat3
dimnames(mat3) = list( c("Linha1", "Linha2"), c("Coluna1", "Coluna2"))
mat3
#Criando um dataframe vazio
df <- data.frame()
class(df)
df
# Criando vetores vazios
nomes <- character()
idades <- numeric()
datas <- as.Date(character())
codigos <- integer()
df <- data.frame(c(nomes, idades, datas, codigos))
df
# Criando vetores
pais = c("EUA", "Dinamarca", "Holanda", "Espanha", " Brasil")
nome= c("Maurício", "Pedro", "Aline", "Beatriz", "Marta")
altura = c(1.78, 1.72, 1.63, 1.59, 1.63)
codigo = c(5001, 2183, 4702, 7965, 8890)
# Criando um dataframe de diversos vetores
pesquisa= data.frame(pais, nome, altura, codigo)
pesquisa
# Adicionando um novo vetor a um dataframe existente
olhos = c("verde", "azul", "azul", "castanho", "castanho")
pesq =  cbind(pesquisa, olhos)
View(pesq)
# Informações sobre o dataframe
str(pesq)
dim(pesq)
length(pesq)
# Obtendo um vetor de um dataframe
pesq$pais
pesq$nome
# Extraindo um unico valor
pesq[1,1]
View(pesquisa)
list.files()
mat2 <- matrix(1:90, 10)
mat2
mat2[sample(1:50),10] = NA
mat2
mat2[sample(1:50,10)] = NA
mat2
?is.na
na_lista <- is.na(mat2)
na_lista
#DataFrames
mtcars
head(mtcars)
tail(mtcars)
str(mtcars)
mtcars(,5)
mtcars[,5]
mtcars[1:4, 7:9]
mtcars[1:4, 'hp']
mtcars['hp']
subset(mtcars, subset = 'hp' > 150)
library(dplr)
library(dplyr)
install.packages('dplyr')
library(dplyr)
install.packages("dplyr")
slice(mtcars, 1:4)
slice.index(mtcars, [1:4])
install.packages("readr")
install.packages("data.table")
#loading packages
library(readr)
library(dplyr)
library(ggplot2)
library(scales)
library(data.table)
# load datasets
system.time( df_test1 <- read.csv("./datasets/TemperaturasGlobais.csv") )
system.time( df_test2 <- data.table("./datasets/TemperaturasGlobais.csv"))
#with read.csv
system.time( df_test1 <- read.csv("./datasets/TemperaturasGlobais.csv") )
system.time( df_test2 <- read.table("./datasets/TemperaturasGlobais.csv"))
#with fread
?fread
system.time(df <- fread("./datasets/TemperaturasGlobais.csv"))
#creating subsets
brazilCities <- subset(df, Country == 'Brazil')
tail(brazilCities)
head(brazilCities)
nrow(df)
nrow(brazilCities)
dim(brazilCities)
# remove NA values
brazilCities <- na.omit(brazilCities)
# Data treatments
brazilCities$dt <- as.POSIXct(brazilCities$dt, format="%Y-%m-%d")
# Data treatments
brazilCities$dt <- as.POSIXct(brazilCities$dt, format="%Y-%m-%d")
brazilCities$Month <- month(brazilCities$dt)
brazilCities$Year <- month(brazilCities$dt)
# Uberlandia
plm <- subset(brazilCities, City == "Uberlandia")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "Uberlândia")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "Lins")
tail(plm)
tail(brazilCities)
# Uberlandia
plm <- subset(brazilCities, City == "Curitiba")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "Lins")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "São Paulo")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "Sao Paulo")
tail(plm)
# Uberlandia
plm <- subset(brazilCities, City == "Curitiba")
# Uberlandia
plm <- subset(brazilCities, City == "Palmas")
# Palmas
plm <- subset(brazilCities, City == "Palmas")
tail(plm)
curitiba <- subset(brazilCities, City == "Curitiba")
tail(curitiba)
recife <- subset(brazilCities, City == "Recife")
tail(recife)
nrow(recife)
nrow(curitiba)
nrow(palmas)
palmas <- subset(brazilCities, City == "Palmas")
tail(palmas)
nrow(palmas)
palmas <- subset(palmas, Year %in% c(1796, 1846, 1946))
nrow(palmas)
tail(palmas)
palmas <- subset(palmas, Year %in% c(2012, 1846, 1946))
nrow(palmas)
palmas <- subset(palmas, Year %in% c(1996, 1846, 1946))
tail(palmas)
nrow(palmas)
palmas <- subset(palmas, Year %in% c(1796, 1846, 1896, 1946, 1996, 2012 ))
tail(palmas)
nrow(palmas)
curitiba <- subset(brazilCities, City == "Curitiba")
palmas <- subset(curitiba, Year %in% c(1796, 1846, 1896, 1946, 1996, 2012 ))
tail(curitiba)
nrow(curitiba)
curitiba <- subset(curitiba, Year %in% c(1796, 1846, 1896, 1946, 1996, 2012 ))
tail(curitiba)
nrow(curitiba)
recife <- subset(brazilCities, City == "Recife")
recife <- subset(recife, Year %in% c(1796, 1846, 1896, 1946, 1996, 2012 ))
tail(recife)
nrow(recife)
plot_palmas <- ggplot(palmas, aes(x = (Month), y = AverageTemperature, color = as.factor(Year))) +
geom_smooth(se = FALSE, fill = NA, size = 2) +
theme_light(base_size = 20) +
xlab("Mês") +
ylab("Temperatura média") +
scale_color_discrete("") +
ggtitle("Temperatura ao longo dos anos em Palmas") +
theme(plot.title = element_text(size = 18))
plot_palmas
palmas <- subset(brazilCities, City == "Palmas")
plot_palmas <- ggplot(palmas, aes(x = (Month), y = AverageTemperature, color = as.factor(Year))) +
geom_smooth(se = FALSE, fill = NA, size = 2) +
theme_light(base_size = 20) +
xlab("Mês") +
ylab("Temperatura média") +
scale_color_discrete("") +
ggtitle("Temperatura ao longo dos anos em Palmas") +
theme(plot.title = element_text(size = 18))
plot_palmas
tail(palmas)
plot_palmas <- ggplot(brazilCities, aes(x = (Month), y = AverageTemperature, color = as.factor(Year))) +
geom_smooth(se = FALSE, fill = NA, size = 2) +
theme_light(base_size = 20) +
xlab("Mês") +
ylab("Temperatura média") +
scale_color_discrete("") +
ggtitle("Temperatura ao longo dos anos em Palmas") +
theme(plot.title = element_text(size = 18))
plot_palmas
plot_palmas <- ggplot(palmas, aes(x = (Month), y = AverageTemperature, color = as.factor(Year))) +
geom_smooth(se = FALSE, fill = NA, size = 2) +
theme_light(base_size = 20) +
xlab("Mês") +
ylab("Temperatura média") +
scale_color_discrete("") +
ggtitle("Temperatura ao longo dos anos em Palmas") +
theme(plot.title = element_text(size = 18))
plot_palmas
tail(palmas)
head(curitiba)
head(palmas)
